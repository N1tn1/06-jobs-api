openapi: 3.0.0
info:
  title: TASKS API
  contact: {}
  version: '1.0'
servers:
  - url: https://tasks-api-06.render.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
            example:
              name: bob
              email: bob@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
            example:
              email: susan@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/resetPassword:
    post:
      tags:
        - Auth
      summary: Reset Password
      operationId: ResetPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []

  /tasks:
    post:
      tags:
        - Tasks
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
            example:
              title: Study
              category: Urgent and Important
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
        - Tasks
      summary: Get All Tasks
      operationId: GetAllTasks
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /tasks/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Task ID
    get:
      tags:
        - Tasks
      summary: Get Task By Id
      operationId: GetTaskById
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false

    patch:
      tags:
        - Tasks
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
            example:
              title: Sleep
              category: Important but Not Urgent
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Tasks
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: bob
        email: bob@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: susan@gmail.com
        password: secret
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - title
        - category
      type: object
      properties:
        title:
          type: string
        category:
          type: string
      example:
        title: Study
        category: Urgent and Important
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - title
        - category
      type: object
      properties:
        title:
          type: string
        category:
          type: string
      example:
        title: Sleep
        category: Important but Not Urgent
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
    description: ''
  - name: Tasks
    description: ''
